@tool
extends Sprite2D

var surfacePattern = [];
var polygon = [];

var image;

@export var activate = false;

@export var currentOffset = Vector2.ZERO;
@export var grid = Vector2(16,16);
@export var snapRange = 2;
@export var checkCenters = false;

@export var generateMasks = false;
@export var showMetaTiles = false;
@export var createTileLookUpTable = false;
@export var ignoreDupes = false;

@export var saveTileSetData = false;
@export var saveGlobalTileData = false;

# orientation breaks the current tile grid up and flips the calculations around
# then when the "get pixel" script is called it takes the orientation and does
# some math to determing the direction to trace the surface
# this is basically so we can code our tracing algorithm to only go in one direction
# but turn it and flip it to work in any direction, tho we're only interested
# in tracing surfaces and ceilings

# orientation 1 = slope going right, -1 = slope going left, 2 = ceiling going right, -2 = ceiling going left
var orientation = 1;


# Collission Generators

# TileMetaData Generator (prefill it with data just to save time)
var metaTiles = {
	# 0 = empty
	0: {"Angle": 0, "HeightMap": [0,0,0,0,0,0,0,0]},
	# 1 = filled
	1: {"Angle": 0, "HeightMap": [8,8,8,8,8,8,8,8]},
	2:{"Angle":0,"HeightMap":[1,1,1,1,1,1,1,1]},
	3:{"Angle":0,"HeightMap":[2,2,2,2,2,2,2,2]},
	4:{"Angle":0,"HeightMap":[3,3,3,3,3,3,3,3]},
	5:{"Angle":0,"HeightMap":[4,4,4,4,4,4,4,4]},
	6:{"Angle":0,"HeightMap":[5,5,5,5,5,5,5,5]},
	7:{"Angle":0,"HeightMap":[6,6,6,6,6,6,6,6]},
	8:{"Angle":0,"HeightMap":[7,7,7,7,7,7,7,7]},
	9:{"Angle":-0.141372,"HeightMap":[1,1,1,1,2,2,2,2]},
	10:{"Angle":-0.141372,"HeightMap":[3,3,3,3,4,4,4,4]},
	11:{"Angle":-0.141372,"HeightMap":[5,5,5,5,6,6,6,6]},
	12:{"Angle":-0.141372,"HeightMap":[7,7,7,7,8,8,8,8]},
	13:{"Angle":-0.404916,"HeightMap":[1,1,2,2,3,3,4,4]},
	14:{"Angle":-0.404916,"HeightMap":[5,5,6,6,7,7,8,8]},
	15:{"Angle":-0.785398,"HeightMap":[1,2,3,4,5,6,7,8]},
	16:{"Angle":-1.106539,"HeightMap":[0,0,0,0,2,4,6,8]},
	17:{"Angle":-0.708604,"HeightMap":[2,4,6,8,8,8,8,8]},
	18:{"Angle":-1.32645,"HeightMap":[0,0,0,0,0,0,4,8]},
	19:{"Angle":-0.92677,"HeightMap":[0,0,4,8,8,8,8,8]},
	20:{"Angle":-1.446878,"HeightMap":[0,0,0,0,0,0,0,8]},
	21:{"Angle":-0.92677,"HeightMap":[0,0,2,5,8,8,8,8]},
	22:{"Angle":-0.851721,"HeightMap":[0,2,3,5,6,8,8,8]},
	23:{"Angle":-0.785398,"HeightMap":[0,0,0,1,2,3,4,5]},
	24:{"Angle":-0.277507,"HeightMap":[6,8,8,8,8,8,8,8]},
	25:{"Angle":-0.518363,"HeightMap":[0,1,1,2,2,3,3,4]},
	26:{"Angle":-0.518363,"HeightMap":[4,5,5,5,6,7,7,8]},
	27:{"Angle":-1.106539,"HeightMap":[0,0,0,0,4,8,8,8]},
	28:{"Angle":-0.518363,"HeightMap":[4,8,8,8,8,8,8,8]},
	29:{"Angle":-1.106539,"HeightMap":[0,0,0,0,1,4,8,8]},
	30:{"Angle":-1.106539,"HeightMap":[0,0,0,0,0,0,2,4]},
	31:{"Angle":-0.862193,"HeightMap":[0,0,1,2,3,4,5,7]},
	32:{"Angle":-0.619592,"HeightMap":[1,1,2,3,4,5,5,6]},
	33:{"Angle":-0.141372,"HeightMap":[7,8,8,8,8,8,8,8]},
	34:{"Angle":-0.141372,"HeightMap":[1,2,2,2,2,2,2,2]},
	35:{"Angle":-0.277507,"HeightMap":[2,3,3,3,3,4,4,4]},
	36:{"Angle":-0.404916,"HeightMap":[5,5,6,6,6,7,7,8]},
	37:{"Angle":-0.464258,"HeightMap":[0,0,0,0,1,1,1,2]},
	38:{"Angle":-0.404916,"HeightMap":[1,1,1,2,2,3,3,4]},
	39:{"Angle":-0.518363,"HeightMap":[4,5,5,6,6,7,8,8]},
	40:{"Angle":-0.277507,"HeightMap":[0,1,1,1,1,2,2,2]},
	41:{"Angle":-0.277507,"HeightMap":[2,3,3,3,4,4,4,4]},
	42:{"Angle":-0.277507,"HeightMap":[5,5,5,6,6,6,7,7]},
	43:{"Angle":-0.785398,"HeightMap":[0,0,0,0,0,0,0,1]},
	44:{"Angle":-0.141372,"HeightMap":[3,3,3,3,3,3,4,4]},
	45:{"Angle":-0.141372,"HeightMap":[4,4,4,5,5,5,5,5]},
	46:{"Angle":-0.141372,"HeightMap":[5,5,6,6,6,6,6,6]},
	47:{"Angle":-0.141372,"HeightMap":[6,6,6,7,7,7,7,7]},
	48:{"Angle":-0.141372,"HeightMap":[7,7,7,7,7,7,7,8]},
	49:{"Angle":-0.404916,"HeightMap":[1,1,2,2,3,3,3,4]},
	50:{"Angle":-0.404916,"HeightMap":[4,5,5,5,6,6,7,7]},
	51:{"Angle":-0.851721,"HeightMap":[0,1,2,3,4,6,7,8]},
	52:{"Angle":-0.404916,"HeightMap":[2,2,3,3,4,4,4,5]},
	53:{"Angle":-0.404916,"HeightMap":[5,6,6,6,7,7,8,8]},
	54:{"Angle":-0.141372,"HeightMap":[2,2,2,2,2,3,3,3]},
	55:{"Angle":-0.141372,"HeightMap":[4,4,4,4,4,5,5,5]},
	56:{"Angle":-0.277507,"HeightMap":[2,2,3,3,3,4,4,4]},
	57:{"Angle":-0.277507,"HeightMap":[5,5,5,5,6,6,6,7]},
	58:{"Angle":-0.141372,"HeightMap":[7,7,7,8,8,8,8,8]},
	59:{"Angle":-0.518363,"HeightMap":[1,1,2,3,3,4,4,5]},
	60:{"Angle":-0.404916,"HeightMap":[5,6,6,7,7,8,8,8]},
	61:{"Angle":-0.785398,"HeightMap":[0,0,1,2,3,4,5,6]},
	62:{"Angle":-0.644026,"HeightMap":[0,0,0,0,1,2,2,3]},
	63:{"Angle":-0.619592,"HeightMap":[3,4,5,6,6,7,8,8]},
	64:{"Angle":-0.404916,"HeightMap":[0,1,1,1,2,2,2,3]},
	65:{"Angle":-0.404916,"HeightMap":[3,4,4,4,5,5,6,6]},
	66:{"Angle":-0.277507,"HeightMap":[6,7,7,8,8,8,8,8]},
	67:{"Angle":-0.277507,"HeightMap":[1,1,2,2,2,2,3,3]},
	68:{"Angle":-0.277507,"HeightMap":[3,3,4,4,4,4,5,5]},
	69:{"Angle":-0.141372,"HeightMap":[5,5,5,6,6,6,6,6]},
	70:{"Angle":-0.141372,"HeightMap":[6,6,7,7,7,7,7,7]},
	71:{"Angle":-0.464258,"HeightMap":[0,0,0,0,1,1,2,2]},
	72:{"Angle":-0.518363,"HeightMap":[3,4,4,5,5,6,6,7]},
	73:{"Angle":-0.708604,"HeightMap":[1,2,3,3,4,5,6,7]},
	74:{"Angle":-0.588176,"HeightMap":[0,0,0,0,0,1,1,2]},
	75:{"Angle":-0.518363,"HeightMap":[2,3,3,4,4,5,5,6]},
	76:{"Angle":-0.141372,"HeightMap":[7,7,8,8,8,8,8,8]},
	77:{"Angle":-0.141372,"HeightMap":[1,1,1,1,1,2,2,2]},
	78:{"Angle":-0.141372,"HeightMap":[2,2,2,2,2,2,3,3]},
	79:{"Angle":-0.141372,"HeightMap":[3,3,3,3,3,4,4,4]},
	80:{"Angle":-0.277507,"HeightMap":[4,4,5,5,5,5,6,6]},
	81:{"Angle":-0.277507,"HeightMap":[6,6,7,7,7,7,8,8]},
	82:{"Angle":-0.541052,"HeightMap":[0,0,0,1,1,2,2,3]},
	83:{"Angle":-0.404916,"HeightMap":[3,3,4,4,5,5,5,6]},
	84:{"Angle":-0.277507,"HeightMap":[6,7,7,7,8,8,8,8]},
	85:{"Angle":-0.619592,"HeightMap":[1,1,2,3,3,4,5,6]},
	86:{"Angle":-0.785398,"HeightMap":[0,0,0,0,0,0,1,2]},
	87:{"Angle":-0.464258,"HeightMap":[0,0,0,0,0,0,1,1]},
	88:{"Angle":-0.708604,"HeightMap":[2,3,4,5,6,6,7,8]},
	89:{"Angle":-1.106539,"HeightMap":[0,0,0,0,0,0,0,2]},
	90:{"Angle":-0.619592,"HeightMap":[3,4,5,6,7,8,8,8]},
	91:{"Angle":-0.277507,"HeightMap":[2,2,3,3,3,3,4,4]},
	92:{"Angle":-0.141372,"HeightMap":[6,6,6,6,7,7,7,7]},
	93:{"Angle":-0.619592,"HeightMap":[2,3,4,4,5,6,6,7]},
	94:{"Angle":-0.277507,"HeightMap":[6,7,8,8,8,8,8,8]},
	95:{"Angle":-0.518363,"HeightMap":[4,5,6,8,8,8,8,8]},
	96:{"Angle":-1.029744,"HeightMap":[0,0,0,0,0,2,4,5]},
	97:{"Angle":-1.106539,"HeightMap":[0,0,0,0,0,0,1,4]},
	98:{"Angle":-0.92677,"HeightMap":[0,0,2,6,8,8,8,8]},
	99:{"Angle":-0.464258,"HeightMap":[0,0,1,1,2,2,3,3]},
	100:{"Angle":-0.277507,"HeightMap":[4,4,4,5,5,5,6,6]},
	101:{"Angle":-0.785398,"HeightMap":[1,2,4,5,6,7,8,8]},
	102:{"Angle":-0.541052,"HeightMap":[0,0,0,1,2,2,3,3]},
	103:{"Angle":-0.404916,"HeightMap":[4,4,4,5,5,6,6,7]},
	104:{"Angle":-0.785398,"HeightMap":[0,0,0,0,1,2,3,4]},
	105:{"Angle":-0.404916,"HeightMap":[5,5,6,7,8,8,8,8]},
	106:{"Angle":-0.851721,"HeightMap":[0,1,3,4,6,7,8,8]},
	107:{"Angle":-0.851721,"HeightMap":[0,1,3,5,8,8,8,8]},
	108:{"Angle":-1.106539,"HeightMap":[0,0,0,0,2,6,8,8]},
	109:{"Angle":-0.851721,"HeightMap":[0,4,8,8,8,8,8,8]},
	110:{"Angle":-0.518363,"HeightMap":[3,3,4,5,5,6,7,7]},
	111:{"Angle":-1.106539,"HeightMap":[0,0,0,0,0,2,4,6]},
	112:{"Angle":-0.851721,"HeightMap":[0,6,8,8,8,8,8,8]},
	113:{"Angle":-1.012291,"HeightMap":[0,0,0,3,6,8,8,8]},
	114:{"Angle":-0.92677,"HeightMap":[0,0,2,3,5,6,8,8]},
	115:{"Angle":-0.518363,"HeightMap":[2,2,3,4,4,5,6,6]},
	116:{"Angle":0.404916,"HeightMap":[8,8,7,7,6,6,6,5]},
	117:{"Angle":0.277507,"HeightMap":[5,5,4,4,4,3,3,3]},
	118:{"Angle":0.277507,"HeightMap":[3,2,2,2,2,1,1,1]},
	119:{"Angle":0.244346,"HeightMap":[1,1,1,1,0,0,0,0]},
	120:{"Angle":-1.211259,"HeightMap":[0,0,0,0,0,2,8,8]},
	121:{"Angle":-0.518363,"HeightMap":[4,6,8,8,8,8,8,8]},
	122:{"Angle":-0.277507,"HeightMap":[3,3,4,4,4,5,5,5]},
	123:{"Angle":-0.277507,"HeightMap":[6,6,7,7,8,8,8,8]},
	124:{"Angle":0.404916,"HeightMap":[8,8,8,7,6,6,5,5]},
	125:{"Angle":0.404916,"HeightMap":[4,4,3,3,2,2,1,1]},
	126:{"Angle":0.708604,"HeightMap":[8,7,6,5,4,3,3,2]},
	127:{"Angle":0.785398,"HeightMap":[1,0,0,0,0,0,0,0]},
	128:{"Angle":-0.851721,"HeightMap":[0,8,8,8,8,8,8,8]},
	129:{"Angle":0.785398,"HeightMap":[8,8,7,5,4,3,2,1]},
	130:{"Angle":-0.277507,"HeightMap":[3,4,4,4,5,5,5,5]},
	131:{"Angle":0.141372,"HeightMap":[8,8,8,8,8,8,7,7]},
	132:{"Angle":0.404916,"HeightMap":[7,7,6,6,6,5,5,4]},
	133:{"Angle":0.675442,"HeightMap":[4,3,2,2,1,0,0,0]},
	134:{"Angle":0.851721,"HeightMap":[8,8,8,8,7,5,2,0]},
	135:{"Angle":0.785398,"HeightMap":[8,7,6,5,4,3,2,1]},
	136:{"Angle":0.277507,"HeightMap":[8,8,8,8,8,8,7,6]},
	137:{"Angle":0.895354,"HeightMap":[5,4,2,1,0,0,0,0]},
	138:{"Angle":0.277507,"HeightMap":[8,8,8,8,8,8,8,6]},
	139:{"Angle":0.404916,"HeightMap":[8,8,8,8,8,8,8,5]},
	140:{"Angle":1.012291,"HeightMap":[8,8,6,4,2,0,0,0]},
	141:{"Angle":0.518363,"HeightMap":[8,8,8,7,7,6,5,4]},
	142:{"Angle":0.785398,"HeightMap":[3,2,1,0,0,0,0,0]},
	143:{"Angle":-1.029744,"HeightMap":[0,0,0,0,0,1,3,5]},
	144:{"Angle":0.277507,"HeightMap":[8,8,8,8,7,7,6,6]},
	145:{"Angle":0.404916,"HeightMap":[5,5,4,4,3,3,2,2]},
	146:{"Angle":0.464258,"HeightMap":[1,1,0,0,0,0,0,0]},
	147:{"Angle":-0.862193,"HeightMap":[0,0,1,3,4,5,6,7]},
	148:{"Angle":-0.92677,"HeightMap":[0,0,4,7,8,8,8,8]},
	149:{"Angle":-0.619592,"HeightMap":[3,4,5,7,8,8,8,8]},
	150:{"Angle":0.851721,"HeightMap":[8,8,8,8,8,7,3,0]},
	151:{"Angle":0.619592,"HeightMap":[8,8,8,8,7,6,5,3]},
	152:{"Angle":1.106539,"HeightMap":[2,0,0,0,0,0,0,0]},
	153:{"Angle":-0.851721,"HeightMap":[0,1,4,7,8,8,8,8]},
	154:{"Angle":0.277507,"HeightMap":[8,8,8,8,7,7,7,6]},
	155:{"Angle":0.518363,"HeightMap":[6,5,5,4,4,3,3,2]},
	156:{"Angle":-0.785398,"HeightMap":[1,2,4,5,7,8,8,8]},
	157:{"Angle":0.619592,"HeightMap":[7,6,5,5,4,4,3,2]},
	158:{"Angle":0.588176,"HeightMap":[2,1,1,0,0,0,0,0]},
	159:{"Angle":-0.708604,"HeightMap":[0,1,2,3,3,4,5,6]},
	160:{"Angle":-1.106539,"HeightMap":[0,0,0,0,2,5,7,8]},
	161:{"Angle":-0.92677,"HeightMap":[0,0,0,0,0,2,3,4]},
	162:{"Angle":-0.404916,"HeightMap":[5,6,7,8,8,8,8,8]},
	163:{"Angle":-1.249656,"HeightMap":[0,0,0,0,0,0,0,3]},
	164:{"Angle":-0.785398,"HeightMap":[0,0,0,0,0,1,2,3]},
	165:{"Angle":-0.380482,"HeightMap":[0,0,0,1,1,1,2,2]},
	166:{"Angle":-0.277507,"HeightMap":[4,5,5,5,5,6,6,6]},
	167:{"Angle":-0.321141,"HeightMap":[0,0,0,0,0,1,1,1]},
	168:{"Angle":-0.404916,"HeightMap":[2,2,2,3,3,4,4,5]},
	169:{"Angle":-0.277507,"HeightMap":[1,1,2,2,2,3,3,3]},
	170:{"Angle":-0.277507,"HeightMap":[6,6,7,7,7,7,7,8]},
	171:{"Angle":-1.106539,"HeightMap":[0,0,0,0,2,4,7,8]},
	172:{"Angle":-0.141372,"HeightMap":[1,1,1,1,1,1,2,2]},
	173:{"Angle":-0.404916,"HeightMap":[2,2,3,3,3,4,4,5]},
	174:{"Angle":-0.404916,"HeightMap":[5,6,6,7,8,8,8,8]},
	175:{"Angle":-0.404916,"HeightMap":[4,5,5,6,6,7,7,7]},
	176:{"Angle":-0.277507,"HeightMap":[3,3,3,4,4,4,4,5]},
	177:{"Angle":-0.277507,"HeightMap":[5,5,5,6,6,6,6,7]},
	178:{"Angle":-0.518363,"HeightMap":[1,1,2,3,3,4,5,5]},
	179:{"Angle":-0.708604,"HeightMap":[2,3,4,5,5,6,7,8]},
	180:{"Angle":-0.851721,"HeightMap":[0,1,2,3,5,6,7,8]},
	181:{"Angle":-0.518363,"HeightMap":[4,4,5,6,6,7,8,8]},
	182:{"Angle":-1.012291,"HeightMap":[0,0,0,2,3,5,6,8]},
	183:{"Angle":-1.106539,"HeightMap":[0,0,0,0,3,6,8,8]},
	184:{"Angle":-0.785398,"HeightMap":[1,8,8,8,8,8,8,8]},
	185:{"Angle":1.446878,"HeightMap":[8,0,0,0,0,0,0,0]},
	186:{"Angle":1.211259,"HeightMap":[8,8,1,0,0,0,0,0]},
	187:{"Angle":0.92677,"HeightMap":[8,8,8,8,6,3,0,0]},
	188:{"Angle":1.106539,"HeightMap":[8,6,4,2,0,0,0,0]},
	189:{"Angle":-0.785398,"HeightMap":[1,2,3,5,6,7,8,8]},
	190:{"Angle":-0.708604,"HeightMap":[1,2,3,4,4,5,6,7]},
	191:{"Angle":-1.32645,"HeightMap":[0,0,0,0,0,0,7,8]},
	192:{"Angle":-0.851721,"HeightMap":[0,2,5,8,8,8,8,8]},
	193:{"Angle":-0.708604,"HeightMap":[2,3,5,6,8,8,8,8]},
	194:{"Angle":1.32645,"HeightMap":[8,3,0,0,0,0,0,0]},
	195:{"Angle":1.106539,"HeightMap":[8,8,8,2,0,0,0,0]},
	196:{"Angle":0.518363,"HeightMap":[8,8,8,8,8,8,7,4]},
	197:{"Angle":0.708604,"HeightMap":[8,8,8,8,8,6,4,2]},
	198:{"Angle":1.16588,"HeightMap":[7,4,1,0,0,0,0,0]},
	199:{"Angle":0.92677,"HeightMap":[8,8,8,8,8,6,0,0]},
	200:{"Angle":0.851721,"HeightMap":[8,8,7,5,4,2,1,0]},
	201:{"Angle":0.619592,"HeightMap":[8,8,8,8,8,6,5,3]},
	202:{"Angle":0.141372,"HeightMap":[8,8,8,8,8,8,8,7]},
	203:{"Angle":0.98262,"HeightMap":[6,4,3,1,0,0,0,0]},
	204:{"Angle":-0.619592,"HeightMap":[3,5,6,8,8,8,8,8]},
	205:{"Angle":-0.851721,"HeightMap":[0,1,2,4,5,7,8,8]},
	206:{"Angle":-0.98262,"HeightMap":[0,0,0,0,1,3,4,6]},
	207:{"Angle":0.277507,"HeightMap":[8,8,8,8,8,7,7,6]},
	208:{"Angle":1.012291,"HeightMap":[8,8,8,5,2,0,0,0]},
	209:{"Angle":0.851721,"HeightMap":[8,8,8,8,8,8,7,0]},
	210:{"Angle":0.277507,"HeightMap":[6,6,6,5,5,5,4,4]},
	211:{"Angle":0.141372,"HeightMap":[4,4,3,3,3,3,3,3]},
	212:{"Angle":0.141372,"HeightMap":[3,2,2,2,2,2,2,2]},
	213:{"Angle":0.619592,"HeightMap":[8,8,7,6,5,4,3,3]},
	214:{"Angle":0.785398,"HeightMap":[2,1,0,0,0,0,0,0]},
	215:{"Angle":0.518363,"HeightMap":[8,8,8,8,8,8,8,4]},
	216:{"Angle":1.012291,"HeightMap":[8,8,8,7,1,0,0,0]},
	217:{"Angle":1.32645,"HeightMap":[8,4,0,0,0,0,0,0]},
	218:{"Angle":0.708604,"HeightMap":[8,8,7,6,5,4,3,2]},
	219:{"Angle":0.92677,"HeightMap":[8,8,8,8,8,4,0,0]},
	220:{"Angle":1.211259,"HeightMap":[8,8,5,0,0,0,0,0]},
	221:{"Angle":0.785398,"HeightMap":[8,8,7,6,5,4,3,1]},
	222:{"Angle":0.619592,"HeightMap":[8,8,7,6,5,4,4,3]},
	223:{"Angle":0.464258,"HeightMap":[2,2,1,1,0,0,0,0]},
	224:{"Angle":0.277507,"HeightMap":[7,7,7,6,6,6,6,5]},
	225:{"Angle":0.141372,"HeightMap":[5,5,5,5,4,4,4,4]},
	226:{"Angle":0.141372,"HeightMap":[4,4,4,3,3,3,3,3]},
	227:{"Angle":0.141372,"HeightMap":[3,3,3,3,3,3,2,2]},
	228:{"Angle":0.141372,"HeightMap":[2,2,2,2,2,2,1,1]},
	229:{"Angle":1.012291,"HeightMap":[8,8,8,6,3,0,0,0]},
	230:{"Angle":-0.141372,"HeightMap":[2,2,2,2,3,3,3,3]},
	231:{"Angle":-0.141372,"HeightMap":[6,7,7,7,7,7,7,7]},
	232:{"Angle":-0.518363,"HeightMap":[4,5,5,6,6,7,7,8]},
	233:{"Angle":0.518363,"HeightMap":[8,8,8,8,8,8,6,4]},
	234:{"Angle":-0.141372,"HeightMap":[0,1,1,1,1,1,1,1]},
	235:{"Angle":-0.277507,"HeightMap":[6,6,7,7,7,8,8,8]}
};
var tile = {
	#0:
	# 0 empty tile
#	{
#		"TileData": [0,0,0,0],
#		"Dir": [[0,0],[0,0],[0,0],[0,0]]
#		"Angle": 0
#	},

	# note: these angles are in degrees and not radians
	0:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 0]},
	1:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 2]},
	2:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 3, 3]},
	3:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 4, 4]},
	4:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 5, 5]},
	5:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 6, 6]},
	6:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 7, 7]},
	7:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 8, 8]},
	8:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 1, 1]},
	9:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[2, 2, 1, 1]},
	10:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[3, 3, 1, 1]},
	11:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[4, 4, 1, 1]},
	12:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[5, 5, 1, 1]},
	13:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[6, 6, 1, 1]},
	14:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[7, 7, 1, 1]},
	15:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[8, 8, 1, 1]},
	16:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 3]},
	17:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 4, 5]},
	18:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 6, 7]},
	19:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 8, 1]},
	20:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[2, 3, 1, 1]},
	21:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[4, 5, 1, 1]},
	22:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[6, 7, 1, 1]},
	23:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[8, 1, 1, 1]},
	24:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 9, 10]},
	25:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 11, 12]},
	26:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[9, 10, 1, 1]},
	27:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[11, 12, 1, 1]},
	28:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 13, 14]},
	29:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[13, 14, 1, 1]},
	30:{"Angle":5.546875, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 15, 15, 1]},
	31:{"Angle":5.105088, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 16, 0, 17]},
	32:{"Angle":5.105088, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[16, 1, 17, 1]},
	33:{"Angle":4.908739, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 18, 0, 27]},
	34:{"Angle":4.908739, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 19, 0, 28]},
	35:{"Angle":4.908739, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[18, 1, 27, 1]},
	36:{"Angle":4.908739, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[19, 1, 28, 1]},
	37:{"Angle":4.908739, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 20, 0, 29]},
	38:{"Angle":5.203263, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 21, 30, 24]},
	39:{"Angle":5.25235, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 31]},
	40:{"Angle":5.25235, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[22, 1, 1, 1]},
	41:{"Angle":5.4487, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 32]},
	42:{"Angle":5.4487, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[23, 24, 33, 1]},
	43:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 2]},
	44:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 34, 35]},
	45:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 25, 36, 1]},
	46:{"Angle":5.694137, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[26, 1, 1, 1]},
	47:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 37]},
	48:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 52, 53]},
	49:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[38, 39, 1, 1]},
	50:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 34, 54]},
	51:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 44, 55]},
	52:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 46, 12]},
	53:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[40, 41, 1, 1]},
	54:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[42, 33, 1, 1]},
	55:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 37, 56]},
	56:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 43, 57, 58]},
	57:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[9, 44, 1, 1]},
	58:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[45, 46, 1, 1]},
	59:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[47, 48, 1, 1]},
	60:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 59, 60]},
	61:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[49, 50, 1, 1]},
	62:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[33, 1, 1, 1]},
	63:{"Angle":5.546875, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 51, 61, 1]},
	64:{"Angle":5.595962, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 61, 73, 1]},
	65:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 74, 75]},
	66:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[62, 63, 76, 1]},
	67:{"Angle":6.234098, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 77]},
	68:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 78, 79]},
	69:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 80, 81]},
	70:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[64, 65, 1, 1]},
	71:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[66, 1, 1, 1]},
	72:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 82]},
	73:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 43, 83, 84]},
	74:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[67, 68, 1, 1]},
	75:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[69, 70, 1, 1]},
	76:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[58, 1, 1, 1]},
	77:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 71, 85, 66]},
	78:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[72, 33, 1, 1]},
	79:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 86]},
	80:{"Angle":5.595962, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[87, 88, 90, 1]},
	81:{"Angle":5.399612, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[89, 90, 101, 1]},
	82:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 102, 103]},
	83:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[37, 91, 76, 1]},
	84:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[80, 92, 1, 1]},
	85:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[12, 1, 1, 1]},
	86:{"Angle":5.694137, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 104]},
	87:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[86, 93, 105, 1]},
	88:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[23, 94, 94, 1]},
	89:{"Angle":5.203263, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[86, 95, 106, 1]},
	90:{"Angle":5.105088, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 96, 0, 107]},
	91:{"Angle":4.957826, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[97, 24, 108, 1]},
	92:{"Angle":4.859651, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[98, 1, 109, 1]},
	93:{"Angle":4.761476, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[28, 1, 1, 1]},
	94:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 86, 110]},
	95:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[99, 100, 1, 1]},
	96:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[70, 1, 1, 1]},
	97:{"Angle":5.25235, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 86, 0, 22]},
	98:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[90, 1, 1, 1]},
	99:{"Angle":5.006913, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[111, 1, 21, 1]},
	100:{"Angle":4.810564, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[112, 1, 1, 1]},
	101:{"Angle":5.203263, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 20, 0, 120]},
	102:{"Angle":5.301438, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 113, 89, 121]},
	103:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 61]},
	104:{"Angle":5.203263, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[114, 1, 33, 1]},
	105:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 78]},
	106:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 87, 122, 123]},
	107:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[115, 33, 1, 1]},
	108:{"Angle":2.699806, "Dir":[[0, 0], [0, 0], [0, 0], [0, 1]], "TileData":[1, 1, 1, 124]},
	109:{"Angle":2.797981, "Dir":[[0, 0], [0, 1], [0, 1], [0, 0]], "TileData":[1, 116, 125, 0]},
	110:{"Angle":2.945243, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[117, 118, 0, 0]},
	111:{"Angle":0, "Dir":[[0, 1], [0, 0], [0, 0], [0, 0]], "TileData":[119, 0, 0, 0]},
	112:{"Angle":2.356194, "Dir":[[0, 0], [0, 0], [0, 0], [0, 1]], "TileData":[1, 1, 1, 135]},
	113:{"Angle":2.454369, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[126, 127, 0, 0]},
	114:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[128, 1, 128, 1]},
	115:{"Angle":2.25802, "Dir":[[0, 1], [0, 0], [0, 1], [0, 0]], "TileData":[129, 0, 127, 0]},
	116:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 87, 93]},
	117:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[82, 130, 33, 1]},
	118:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[92, 58, 1, 1]},
	119:{"Angle":3.239767, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[2, 78, 0, 0]},
	120:{"Angle":3.436117, "Dir":[[0, 1], [0, 1], [0, 0], [0, 1]], "TileData":[122, 123, 0, 87]},
	121:{"Angle":3.583379, "Dir":[[0, 0], [0, 0], [0, 1], [0, 1]], "TileData":[1, 1, 115, 33]},
	122:{"Angle":3.926991, "Dir":[[0, 0], [0, 1], [0, 0], [0, 0]], "TileData":[0, 61, 0, 0]},
	123:{"Angle":4.12334, "Dir":[[0, 1], [0, 0], [0, 1], [0, 0]], "TileData":[33, 1, 114, 1]},
	124:{"Angle":0.245437, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[131, 132, 1, 1]},
	125:{"Angle":0.785398, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[133, 0, 136, 137]},
	126:{"Angle":4.368777, "Dir":[[0, 1], [0, 1], [0, 0], [0, 1]], "TileData":[89, 121, 0, 113]},
	127:{"Angle":1.374447, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 134, 1, 138]},
	128:{"Angle":4.614214, "Dir":[[0, 0], [0, 1], [0, 0], [0, 0]], "TileData":[0, 120, 0, 20]},
	129:{"Angle":1.718058, "Dir":[[0, 0], [0, 1], [0, 0], [0, 1]], "TileData":[1, 139, 1, 150]},
	130:{"Angle":4.761476, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 20, 0, 18]},
	131:{"Angle":2.06167, "Dir":[[0, 0], [0, 1], [0, 1], [0, 1]], "TileData":[1, 140, 151, 152]},
	132:{"Angle":4.957826, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 108, 0, 153]},
	133:{"Angle":2.748894, "Dir":[[0, 0], [0, 0], [0, 0], [0, 1]], "TileData":[1, 1, 1, 154]},
	134:{"Angle":2.601631, "Dir":[[0, 0], [0, 1], [0, 1], [0, 1]], "TileData":[1, 141, 155, 146]},
	135:{"Angle":2.356194, "Dir":[[0, 1], [0, 0], [0, 0], [0, 0]], "TileData":[142, 0, 0, 0]},
	136:{"Angle":5.154175, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[143, 33, 156, 1]},
	137:{"Angle":2.650719, "Dir":[[0, 0], [0, 1], [0, 1], [0, 1]], "TileData":[1, 144, 157, 158]},
	138:{"Angle":2.748894, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[145, 146, 0, 0]},
	139:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 147, 159, 33]},
	140:{"Angle":4.663302, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 128, 1]},
	141:{"Angle":4.417865, "Dir":[[0, 1], [0, 0], [0, 1], [0, 0]], "TileData":[148, 1, 160, 1]},
	142:{"Angle":4.12334, "Dir":[[0, 1], [0, 1], [0, 0], [0, 1]], "TileData":[43, 149, 0, 161]},
	143:{"Angle":3.926991, "Dir":[[0, 0], [0, 0], [0, 1], [0, 0]], "TileData":[1, 1, 162, 1]},
	144:{"Angle":3.730641, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[62, 39, 0, 0]},
	145:{"Angle":3.436117, "Dir":[[0, 0], [0, 0], [0, 1], [0, 1]], "TileData":[1, 1, 169, 100]},
	146:{"Angle":3.239767, "Dir":[[0, 0], [0, 0], [0, 1], [0, 0]], "TileData":[1, 1, 170, 1]},
	147:{"Angle":5.301438, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 163, 0, 171]},
	148:{"Angle":5.546875, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 172, 173]},
	149:{"Angle":5.694137, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[164, 95, 174, 1]},
	150:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 13, 175]},
	151:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[165, 35, 1, 1]},
	152:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[166, 47, 1, 1]},
	153:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[12, 1, 1, 1]},
	154:{"Angle":6.234098, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 9]},
	155:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 54, 176]},
	156:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 167, 177, 76]},
	157:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[168, 14, 1, 1]},
	158:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[33, 1, 1, 1]},
	159:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 87, 178, 123]},
	160:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[56, 11, 1, 1]},
	161:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[48, 1, 1, 1]},
	162:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[43, 179, 189, 1]},
	163:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 180, 190, 1]},
	164:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 34]},
	165:{"Angle":6.037748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 10, 42]},
	166:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[99, 181, 1, 1]},
	167:{"Angle":4.810564, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 20, 0, 191]},
	168:{"Angle":4.957826, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 27, 0, 192]},
	169:{"Angle":5.154175, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[111, 1, 193, 1]},
	170:{"Angle":5.154175, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 182, 89, 121]},
	171:{"Angle":4.957826, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[183, 1, 19, 1]},
	172:{"Angle":4.810564, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[184, 1, 1, 1]},
	173:{"Angle":1.521709, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[185, 0, 194, 0]},
	174:{"Angle":1.374447, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[186, 0, 195, 0]},
	175:{"Angle":1.276272, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[187, 0, 196, 127]},
	176:{"Angle":1.178097, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 188, 1, 197]},
	177:{"Angle":1.178097, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[188, 0, 197, 0]},
	178:{"Angle":1.276272, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 198, 1, 208]},
	179:{"Angle":1.423534, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 199, 1, 209]},
	180:{"Angle":1.521709, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 139, 1, 1]},
	181:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 1, 0, 1]},
	182:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[200, 0, 202, 203]},
	183:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 201, 1, 1]},
	184:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[152, 0, 200, 0]},
	185:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[202, 203, 1, 201]},
	186:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 152, 0]},
	187:{"Angle":4.12334, "Dir":[[0, 0], [0, 1], [0, 0], [0, 0]], "TileData":[0, 89, 0, 0]},
	188:{"Angle":4.12334, "Dir":[[0, 1], [0, 0], [0, 1], [0, 1]], "TileData":[204, 1, 206, 33]},
	189:{"Angle":4.12334, "Dir":[[0, 0], [0, 1], [0, 0], [0, 1]], "TileData":[0, 205, 0, 89]},
	190:{"Angle":4.12334, "Dir":[[0, 0], [0, 0], [0, 1], [0, 0]], "TileData":[1, 1, 204, 1]},
	191:{"Angle":4.12334, "Dir":[[0, 1], [0, 1], [0, 0], [0, 1]], "TileData":[206, 33, 0, 205]},
	192:{"Angle":2.552544, "Dir":[[0, 0], [0, 0], [0, 0], [0, 1]], "TileData":[1, 1, 1, 144]},
	193:{"Angle":2.748894, "Dir":[[0, 0], [0, 1], [0, 1], [0, 1]], "TileData":[1, 207, 145, 146]},
	194:{"Angle":2.945243, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[210, 211, 0, 0]},
	195:{"Angle":3.043418, "Dir":[[0, 1], [0, 1], [0, 0], [0, 0]], "TileData":[212, 2, 0, 0]},
	196:{"Angle":3.092505, "Dir":[[0, 1], [0, 0], [0, 0], [0, 0]], "TileData":[2, 0, 0, 0]},
	197:{"Angle":2.356194, "Dir":[[0, 0], [0, 0], [0, 0], [0, 1]], "TileData":[1, 1, 1, 218]},
	198:{"Angle":2.356194, "Dir":[[0, 1], [0, 1], [0, 1], [0, 0]], "TileData":[213, 214, 127, 0]},
	199:{"Angle":1.963495, "Dir":[[0, 1], [0, 1], [0, 1], [0, 0]], "TileData":[201, 152, 188, 0]},
	200:{"Angle":1.767146, "Dir":[[0, 0], [0, 1], [0, 0], [0, 1]], "TileData":[1, 215, 1, 219]},
	201:{"Angle":1.767146, "Dir":[[0, 1], [0, 0], [0, 0], [0, 0]], "TileData":[127, 0, 0, 0]},
	202:{"Angle":1.668971, "Dir":[[0, 0], [0, 1], [0, 0], [0, 1]], "TileData":[1, 216, 1, 220]},
	203:{"Angle":1.619884, "Dir":[[0, 0], [0, 1], [0, 0], [0, 0]], "TileData":[1, 217, 1, 185]},
	204:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[200, 0, 202, 203]},
	205:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 201, 1, 1]},
	206:{"Angle":0.981748, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[152, 0, 221, 0]},
	207:{"Angle":0.785398, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 135, 1, 1]},
	208:{"Angle":0.589049, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 222, 223]},
	209:{"Angle":0.589049, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 207, 1, 1]},
	210:{"Angle":0.392699, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[155, 158, 1, 202]},
	211:{"Angle":0.294524, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 224, 225]},
	212:{"Angle":0.19635, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 226, 227]},
	213:{"Angle":0.098175, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 3, 228]},
	214:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 43]},
	215:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 67, 68]},
	216:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 69, 70]},
	217:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 58, 1]},
	218:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 71]},
	219:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 82, 72, 33]},
	220:{"Angle":5.939574, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[83, 84, 1, 1]},
	221:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 15]},
	222:{"Angle":5.694137, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[85, 66, 1, 1]},
	223:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[15, 1, 1, 1]},
	224:{"Angle":5.694137, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 62, 63]},
	225:{"Angle":6.234098, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 64, 65]},
	226:{"Angle":5.841399, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[74, 75, 66, 1]},
	227:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[76, 1, 1, 1]},
	228:{"Angle":6.234098, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[2, 77, 1, 1]},
	229:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[78, 79, 1, 1]},
	230:{"Angle":6.086836, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[80, 81, 1, 1]},
	231:{"Angle":1.276272, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[229, 0, 233, 152]},
	232:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 32]},
	233:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[23, 24, 33, 1]},
	234:{"Angle":4.810564, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 20, 0, 120]},
	235:{"Angle":5.006913, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 113, 89, 121]},
	236:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 61]},
	237:{"Angle":5.203263, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[114, 1, 33, 1]},
	238:{"Angle":6.185011, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 2, 78]},
	239:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 87, 122, 123]},
	240:{"Angle":5.792311, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[115, 33, 1, 1]},
	241:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 1]},
	242:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[230, 55, 1, 1]},
	243:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[69, 231, 1, 1]},
	244:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 0]},
	245:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 0]},
	246:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 0, 0]},
	247:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 234, 78]},
	248:{"Angle":6.135923, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 0, 79, 80]},
	249:{"Angle":5.988661, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[0, 38, 235, 1]},
	250:{"Angle":5.890486, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[232, 1, 1, 1]},
	251:{"Angle":5.497787, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 1, 1]},
	252:{"Angle":0.785398, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 1, 1]},
	253:{"Angle":3.926991, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 1, 1]},
	254:{"Angle":2.356194, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 1, 1]},
	255:{"Angle":0, "Dir":[[0, 0], [0, 0], [0, 0], [0, 0]], "TileData":[1, 1, 1, 1]},
};

var tileMap = {
#	0:[0,0,0],1:[0,0,0]]
	0:[0,0,0],
	1:[1,0,0],
	2:[2,0,0],
	3:[3,0,0],
	4:[4,0,0],
	5:[5,0,0],
	6:[6,0,0],
	7:[7,0,0],
	8:[8,0,0],
	9:[9,0,0],
	10:[10,0,0],
	11:[11,0,0],
	12:[12,0,0],
	13:[13,0,0],
	14:[14,0,0],
	15:[15,0,0],
	16:[16,0,0],
	17:[17,0,0],
	18:[18,0,0],
	19:[19,0,0],
	20:[20,0,0],
	21:[21,0,0],
	22:[22,0,0],
	23:[23,0,0],
	24:[24,0,0],
	25:[25,0,0],
	26:[26,0,0],
	27:[27,0,0],
	28:[28,0,0],
	29:[29,0,0],
	30:[30,0,0],
	31:[31,0,0],
	32:[32,0,0],
	33:[33,0,0],
	34:[34,0,0],
	35:[35,0,0],
	36:[36,0,0],
	37:[37,0,0],
	38:[38,0,0],
	39:[39,0,0],
	40:[40,0,0],
	41:[41,0,0],
	42:[42,0,0],
	43:[43,0,0],
	44:[44,0,0],
	45:[45,0,0],
	46:[46,0,0],
	47:[47,0,0],
	48:[48,0,0],
	49:[49,0,0],
	50:[50,0,0],
	51:[51,0,0],
	52:[52,0,0],
	53:[53,0,0],
	54:[54,0,0],
	55:[55,0,0],
	56:[56,0,0],
	57:[57,0,0],
	58:[58,0,0],
	59:[59,0,0],
	60:[60,0,0],
	61:[61,0,0],
	62:[62,0,0],
	63:[63,0,0],
	64:[64,0,0],
	65:[65,0,0],
	66:[66,0,0],
	67:[67,0,0],
	68:[68,0,0],
	69:[69,0,0],
	70:[70,0,0],
	71:[71,0,0],
	72:[72,0,0],
	73:[73,0,0],
	74:[74,0,0],
	75:[75,0,0],
	76:[76,0,0],
	77:[77,0,0],
	78:[78,0,0],
	79:[79,0,0],
	80:[80,0,0],
	81:[81,0,0],
	82:[82,0,0],
	83:[83,0,0],
	84:[84,0,0],
	85:[85,0,0],
	86:[86,0,0],
	87:[87,0,0],
	88:[88,0,0],
	89:[89,0,0],
	90:[90,0,0],
	91:[91,0,0],
	92:[92,0,0],
	93:[93,0,0],
	94:[94,0,0],
	95:[95,0,0],
	96:[96,0,0],
	97:[97,0,0],
	98:[98,0,0],
	99:[99,0,0],
	100:[100,0,0],
	101:[101,0,0],
	102:[102,0,0],
	103:[103,0,0],
	104:[104,0,0],
	105:[105,0,0],
	106:[106,0,0],
	107:[107,0,0],
	108:[108,0,0],
	109:[109,0,0],
	110:[110,0,0],
	111:[111,0,0],
	112:[112,0,0],
	113:[113,0,0],
	114:[114,0,0],
	115:[115,0,0],
	116:[116,0,0],
	117:[117,0,0],
	118:[118,0,0],
	119:[119,0,0],
	120:[120,0,0],
	121:[121,0,0],
	122:[122,0,0],
	123:[123,0,0],
	124:[124,0,0],
	125:[125,0,0],
	126:[126,0,0],
	127:[127,0,0],
	128:[128,0,0],
	129:[129,0,0],
	130:[130,0,0],
	131:[131,0,0],
	132:[132,0,0],
	133:[133,0,0],
	134:[134,0,0],
	135:[135,0,0],
	136:[136,0,0],
	137:[137,0,0],
	138:[138,0,0],
	139:[139,0,0],
	140:[140,0,0],
	141:[141,0,0],
	142:[142,0,0],
	143:[143,0,0],
	144:[144,0,0],
	145:[145,0,0],
	146:[146,0,0],
	147:[147,0,0],
	148:[148,0,0],
	149:[149,0,0],
	150:[150,0,0],
	151:[151,0,0],
	152:[152,0,0],
	153:[153,0,0],
	154:[154,0,0],
	155:[155,0,0],
	156:[156,0,0],
	157:[157,0,0],
	158:[158,0,0],
	159:[159,0,0],
	160:[160,0,0],
	161:[161,0,0],
	162:[162,0,0],
	163:[163,0,0],
	164:[164,0,0],
	165:[165,0,0],
	166:[166,0,0],
	167:[167,0,0],
	168:[168,0,0],
	169:[169,0,0],
	170:[170,0,0],
	171:[171,0,0],
	172:[172,0,0],
	173:[173,0,0],
	174:[174,0,0],
	175:[175,0,0],
	176:[176,0,0],
	177:[177,0,0],
	178:[178,0,0],
	179:[179,0,0],
	180:[180,0,0],
	181:[181,0,0],
	182:[182,0,0],
	183:[183,0,0],
	184:[184,0,0],
	185:[185,0,0],
	186:[186,0,0],
	187:[187,0,0],
	188:[188,0,0],
	189:[189,0,0],
	190:[190,0,0],
	191:[191,0,0],
	192:[192,0,0],
	193:[193,0,0],
	194:[194,0,0],
	195:[195,0,0],
	196:[196,0,0],
	197:[197,0,0],
	198:[198,0,0],
	199:[199,0,0],
	200:[200,0,0],
	201:[201,0,0],
	202:[202,0,0],
	203:[203,0,0],
	204:[204,0,0],
	205:[205,0,0],
	206:[206,0,0],
	207:[207,0,0],
	208:[208,0,0],
	209:[209,0,0],
	210:[210,0,0],
	211:[211,0,0],
	212:[212,0,0],
	213:[213,0,0],
	214:[214,0,0],
	215:[215,0,0],
	216:[216,0,0],
	217:[217,0,0],
	218:[218,0,0],
	219:[219,0,0],
	220:[220,0,0],
	221:[221,0,0],
	222:[222,0,0],
	223:[223,0,0],
	224:[224,0,0],
	225:[225,0,0],
	226:[226,0,0],
	227:[227,0,0],
	228:[228,0,0],
	229:[229,0,0],
	230:[230,0,0],
	231:[231,0,0],
	232:[232,0,0],
	233:[233,0,0],
	234:[234,0,0],
	235:[235,0,0],
	236:[236,0,0],
	237:[237,0,0],
	238:[238,0,0],
	239:[239,0,0],
	240:[240,0,0],
	241:[241,0,0],
	242:[242,0,0],
	243:[243,0,0],
	244:[244,0,0],
	245:[245,0,0],
	246:[246,0,0],
	247:[247,0,0],
	248:[248,0,0],
	249:[249,0,0],
	250:[250,0,0],
	251:[251,0,0],
	252:[252,0,0],
	253:[253,0,0],
	254:[254,0,0],
	255:[255,0,0],
};

var pointerDir = preload("res://Graphics/EditorUI/AnglePointer.png");

func _ready():
	update();

func _process(delta):
	if Engine.editor_hint:
		if (activate):
			# this section of code was to convert angles in tiles
			#for i in tile.size():
			#	tile[i]["Angle"] = deg2rad(fposmod(-tile[i]["Angle"],360));
			#	print(i,":",tile[i],",");
			#activate = false;
			return false;
			image = texture.get_data();
			image.lock();
			for y in texture.get_height()/grid.y:
				for x in texture.get_width()/grid.x:
					if (generate_polygon(Vector2(x*grid.x,y*grid.y))):
						
						var shape = ConvexPolygonShape2D.new();
						#shape.set_point_cloud(PoolVector2Array(polygon));
						$TileMap.tile_set.tile_add_shape(0,shape,transform,false,Vector2(x,y));
		
		if (generateMasks):
			generateMasks = false;
			image = texture.get_data();
			image.lock();
			var newMaskCount = 0;
			#generate_masks(currentOffset);
			for y in texture.get_height()/grid.y*2:
				for x in texture.get_width()/grid.x*2:
					if (generate_masks(Vector2(x*grid.x/2,y*grid.y/2))):
						newMaskCount += 1;
			if (newMaskCount > 0):
				#print(metaTiles);
				print(newMaskCount," meta tiles generated");
		
		if (createTileLookUpTable):
			image = texture.get_data();
			image.lock();
			createTileLookUpTable = false;
			for y in texture.get_height()/grid.y:
				for x in texture.get_width()/grid.x:
					generate_tile_lookup(Vector2(x*grid.x,y*grid.y));
		
		if (saveGlobalTileData):
			saveGlobalTileData = false;
			var file = File.new();
			file.open("res://Debug/TileMetaData.json", File.WRITE);
			#file.store_var(to_json(metaTiles));
			file.close();
		
		if (saveTileSetData):
			saveTileSetData = false;
			var data = {"Tile": tile, "TileMap": tileMap};
			var file = File.new();
			file.open("res://Debug/TilesetData.json", File.WRITE);
			#file.store_var(to_json(data));
			file.close();

		
		update();


func generate_polygon(getoffset = currentOffset):
	orientation = 1;
	polygon.clear();

	surfacePattern.clear();
	surfacePattern.append(Vector2.RIGHT);
	var curPat = 0;
	
	
	
	var pose = Vector2.ZERO;
	
	# ceiling orientation check
	while (pose.x < grid.x && abs(orientation) < 2):
		#shift down, if a blank pixel is found below then set orientation to 2
		while (round(get_pixel(image,getoffset+pose).a) == 1 && pose.y < grid.y-1):
			pose.y += 1;
			if (round(get_pixel(image,getoffset+pose).a) == 0):
				orientation = 2;
				#print("New Orientation");
		pose.y = 0;
		pose.x += 1;
	pose = Vector2.ZERO;
	
	
	# find top left corner
	while (polygon.size() == 0 && (pose.x < grid.x || pose.y < grid.y)):
		if (round(get_pixel(image,getoffset+pose).a) == 0):
			if (pose.y < grid.y-1):
				pose.y += 1;
			elif (pose.x < grid.x-1):
				pose.x += 1;
				pose.y = 0;
			else:
				# cancel out if a first polygon couldn't be found
				print("No pixels found at: ",getoffset);
				return false;
		else:
			
			# check heighest
			var highestLeft = pose;
			# check highest right
			pose.x = grid.x-1;
			pose.y = 0;
			while (round(get_pixel(image,getoffset+pose).a) == 0):
				if (pose.y < grid.y-1):
					pose.y += 1;
				elif (pose.x > 0):
					pose.x -= 1;
					pose.y = 0;
			# check that right most isn't heigher
			if (highestLeft.y <= pose.y):
				pose = highestLeft;
			else:
				orientation = -abs(orientation);
				#flip x positions
				pose.x -= (grid.x-1)/2;
				pose.x *= -1;
				pose.x += (grid.x-1)/2;
			
			
			# set top left corner
			polygon.append(pose);
	


	# find end of shape
	if (polygon.size() > 0):
		pose.x = grid.x-1;
		while (round(get_pixel(image,getoffset+pose).a) == 0):
			if (pose.y < grid.y-1):
				pose.y += 1;
			else:
				pose.x -= 1;
				pose.y = 0;
	
	surfacePattern[curPat] = (pose-polygon[0]).normalized();
	
	#error avoidance
	if (surfacePattern[curPat] == Vector2.ZERO):
		surfacePattern[curPat] = Vector2.RIGHT;
	
	while (round(get_pixel(image,getoffset+pose).a) == 1 && pose.x < grid.x-1 && pose.y < grid.y-1):
		pose += surfacePattern[curPat].normalized().round();
	
	#if (surfacePattern[curPat].y >= 0.5 || pose.x < (grid.x-1)):
	#	while (round(get_pixel(image,getoffset+pose).a) == 1 && pose.y < 16):
	#		pose.y += 1;
	
	#edge cases
	if (pose.x >= grid.x-1):
		pose.x = grid.x;
	
	
	polygon.append(pose);
	
	# check in terrain
	var get = getoffset+polygon[0].linear_interpolate(polygon[1],0.5)
	+(polygon[0]-polygon[1]).rotated(deg2rad(90)).normalized();
	# Timeout is used to prevent the tool getting stuck
	var timeOut = max(grid.x,grid.y)*2;
	
	if (round(get_pixel(image,Vector2(clamp(get.x,0,texture.get_width()),clamp(get.y,0,texture.get_height()))).a) == 1):
		polygon.append(polygon[1]);
		polygon[1] = polygon[0];
		# check edge
		if (polygon[1].y == 0):
			while (round(get_pixel(image,getoffset+polygon[1].linear_interpolate(polygon[2],0.5)
			+(polygon[0]-polygon[2]).rotated(deg2rad(90)).normalized()*0.5).a) == 1 && timeOut >= 0):
				polygon[1].x += 1;
				timeOut -= 1;
		elif (checkCenters):
			polygon[1] = polygon[0].linear_interpolate(polygon[2],0.5);
			while (round(get_pixel(image,getoffset+polygon[1]).a) == 1
			&& polygon[1].y > 0 && polygon[1].y < grid.y-1
			&& polygon[1].x > 0 && polygon[1].x < grid.x-1 && timeOut >= 0):
				polygon[1] += (polygon[0]-polygon[2]).rotated(deg2rad(90)).normalized()*0.3;
				timeOut -= 1;
		if (timeOut >= 0):
			polygon[1].x = clamp(polygon[1].x,0,grid.x-1);
			polygon[1].y = clamp(polygon[1].y,0,grid.y-1);
		else:
			# Revert polygon, if timed out
			polygon[1] = polygon[2];
			polygon.remove(2);
				
		
	# check if not touching terrain midway
	elif (round(get_pixel(image,getoffset+polygon[0].linear_interpolate(polygon[1],0.5 && checkCenters)
	+(polygon[0]-polygon[1]).rotated(deg2rad(-90)).normalized()).a) == 0):
	#+polygon[0].linear_interpolate(polygon[1],0.5).rotated(deg2rad(90)).normalized()*0.5).a) == 0):
		polygon.append(polygon[1]);
		polygon[1] = polygon[0].linear_interpolate(polygon[2],0.5);

		while (round(get_pixel(image,getoffset+polygon[1]).a) == 0
		&& polygon[1].y > 0 && polygon[1].y < grid.y-1
		&& polygon[1].x > 0 && polygon[1].x < grid.x-1 && timeOut >= 0):
			polygon[1] += (polygon[0]-polygon[2]).rotated(deg2rad(-90)).normalized()*0.3;
			timeOut -= 1;
		if (timeOut >= 0):
			polygon[1].x = clamp(polygon[1].x,0,grid.x-1);
			polygon[1].y = clamp(polygon[1].y,0,grid.y-1);
		else:
			# Revert polygon, if timed out
			polygon[1] = polygon[2];
			polygon.remove(2);
	
	# bottom edge case
	if (pose.y >= grid.y-1):
		var dir = (polygon[polygon.size()-1]-polygon[polygon.size()-2]).normalized();
		#print(dir);
		if (round(get_pixel(image,getoffset+polygon[polygon.size()-1]-Vector2(1,round(dir.normalized().y*2))).a) == 0 || polygon[polygon.size()-1].x < grid.x-1):
			polygon[polygon.size()-1].y = grid.y;
		while (round(get_pixel(image,getoffset+polygon[polygon.size()-1]-Vector2(0,1)).a) == 1 && polygon[polygon.size()-1].x < 15):
			polygon[polygon.size()-1].x += 1;
	
	
	
	#print(polygon);

	# Create ceiling polygon
	polygon.append(Vector2(polygon[polygon.size()-1].x,16));
	polygon.append(Vector2(polygon[0].x,16));


	# check for unnesessary polygons
	if (polygon.size() > 0):
		for i in polygon.size():
			# check normal pathing, or occupying the same space
			if (i < polygon.size()-1 && i > 0):
				if ((polygon[i]-polygon[i-1]).normalized().is_equal_approx((polygon[i+1]-polygon[i]).normalized())
				|| polygon[i].is_equal_approx(polygon[i+1])
				|| polygon[i-1].distance_to(polygon[i]) < snapRange):
					polygon.remove(i);
					i -= 1;
		# handle orientation
		if (orientation < 0):
			for i in polygon.size():
				polygon[i].x -= (grid.x)/2;
				polygon[i].x *= -1;
				polygon[i].x += (grid.x)/2;
		# vertical flip
		if (abs(orientation) == 2):
			for i in polygon.size():
				polygon[i].y -= (grid.y)/2;
				polygon[i].y *= -1;
				polygon[i].y += (grid.y)/2;
	
	return true;

func generate_masks(getPos = Vector2.ZERO):
	var heightMap = [8,8,8,8,8,8,8,8];
	var angle = 0;
	
	# make a list of height maps to get ids
	var metaHeights = [];
	for i in range(metaTiles.size()):
		metaHeights.append(metaTiles[i]["HeightMap"]);
	
	# check the heights
	heightMap = calculate_height_map(getPos);
	
	# check that heightmap doesn't already exist
	if (metaHeights.find(heightMap) == -1):
		# calculate angle
		var points = [Vector2(0,8-heightMap[0]),Vector2(7,8-heightMap[7])];
		var check = heightMap.size()-1;
		
		while (heightMap[check] == 0 && check > 0):
			points[1] = Vector2(check,8-heightMap[check]);
			check -= 1;
		
		check = 0;
		
		while (heightMap[check] == 0 && check < heightMap.size()-1):
			points[0] = Vector2(check,8-heightMap[check]);
			check += 1;
		
		angle = deg2rad(round(rad2deg(points[0].direction_to(points[1]).angle())*10)/10);
	
		metaTiles[metaTiles.size()] = {"Angle": angle, "HeightMap": heightMap};
		
		# return true
		return true;
	# return false (indicating no new tile was generated)
	return false;

func generate_tile_lookup(getPos = Vector2.ZERO):
	# make a list of height maps to get ids
	var metaHeights = [];
	for i in range(metaTiles.size()):
		metaHeights.append(metaTiles[i]["HeightMap"]);
		
	var setTile = [0,0,0,0];
	var setFlip = [[0,0],[0,0],[0,0],[0,0]];
	var heightMap = [[],[],[],[]];
	var offsets = [Vector2.ZERO,Vector2(8,0),Vector2(0,8),Vector2(8,8)];
	heightMap[0] = calculate_height_map(getPos+offsets[0]);
	heightMap[1] = calculate_height_map(getPos+offsets[1]);
	heightMap[2] = calculate_height_map(getPos+offsets[2]);
	heightMap[3] = calculate_height_map(getPos+offsets[3]);
	#
	# Determin if to flip tile
	for i in range(heightMap.size()):
		if (metaHeights.has(heightMap[i])):
			setTile[i] = metaHeights.find(heightMap[i]);
			var checkHeight = 0;
			
			while (checkHeight < heightMap[i].size()-1 &&
			(heightMap[i][checkHeight] == 8 || heightMap[i][checkHeight] == 0)):
				checkHeight += 1;
			if (heightMap[i][checkHeight] != 8 && heightMap[i][checkHeight] != 0):
				setFlip[i][1] = int(round(get_pixel(image,getPos+offsets[i]+Vector2(checkHeight,0)).a) == 1);
	
	# Check for duplicates
	var duplicateID = -1;
	var tileDic = {"TileData": setTile,"Dir": setFlip,"Angle": 0};
	if (!ignoreDupes):
		for i in range(tile.size()):
			var getData = tile[i].hash();
			if (tileDic.hash() == getData):
				duplicateID = i;
	
	if (duplicateID == -1):
		tile[tile.size()] = tileDic;
		tileMap[tileMap.size()] = [tile.size()-1,0,0];
	else:
		tileMap[tileMap.size()] = [duplicateID,0,0];

func calculate_height_map(getPos = Vector2.ZERO):
	var heightMap = [8,8,8,8,8,8,8,8];
	var heightID = 0;
	var curHeight = -8;
	var checkDir = 1; # 1 = check up, 0 = check down
	while (heightID < heightMap.size()):
		# reset cur height
		curHeight = -8;
		checkDir = 1;
		# if bottom and top are filled then just set mask to 8
		if (round(get_pixel(image,getPos+Vector2(heightID,0)).a) == 1
		&& round(get_pixel(image,getPos+Vector2(heightID,7)).a) == 1):
			curHeight = 8;
		# else calculate heights of collumn
		else:
			# if bottom empty then start from bottom and look up
			if (round(get_pixel(image,getPos+Vector2(heightID,7)).a) == 0):
				checkDir = 0;
				curHeight = 8;
			while (round(get_pixel(image,getPos+Vector2(heightID,(7*checkDir)+curHeight-sign(curHeight))).a) == 0 && round(curHeight) != 0):
				curHeight -= sign(curHeight);
		
		heightMap[heightID] = abs(curHeight);
		heightID += 1;
	return heightMap;

func get_pixel(image,getOffset):
	
	var getY = getOffset.y;
	
	if (abs(orientation) == 2):
		var getOff = grid.y+(floor(getOffset.y/grid.y)*grid.y);
		var calc = getOffset.y-getOff+grid.y;
		getY = getOff-0.5-calc;
		#getY = (floor(getOffset.y/grid.y)*grid.y)+(grid.y-1)-fmod(getOffset.y,grid.y);
	
	if (sign(orientation) == 1):
		return image.get_pixel(getOffset.x,getY);
	else:
		return image.get_pixel((floor(getOffset.x/grid.x)*grid.x)+(grid.x-1)-fmod(getOffset.x-0.9,grid.x),getY);

func _draw():
	if Engine.editor_hint:
		draw_rect(Rect2(currentOffset,grid),Color(0,0,0.5,0.25));
		if (polygon.size() > 0):
			for i in polygon.size():
				if (i < polygon.size()):
					var getNext = fmod(i+1,polygon.size());
					draw_line(currentOffset+polygon[i],currentOffset+polygon[getNext],Color.ORANGE_RED);
					draw_circle(currentOffset+polygon[i].linear_interpolate(polygon[getNext],0.5),0.5,Color.BLUE);
					
					draw_line(currentOffset+polygon[i].linear_interpolate(polygon[getNext],0.5)+(polygon[i]-polygon[getNext]).rotated(deg2rad(-90)).clamped(4),
					currentOffset+polygon[i].linear_interpolate(polygon[getNext],0.5)+(polygon[i]-polygon[getNext]).rotated(deg2rad(90)).clamped(4),Color.GREEN);
					
				draw_circle(currentOffset+polygon[i],0.5,Color.RED);
		if (showMetaTiles):
			var offset = Vector2(0,-64);
			for i in range(metaTiles.size()):
				for x in range(metaTiles[i]["HeightMap"].size()):
					#draw_line(offset+Vector2.DOWN*8,offset+Vector2.DOWN*metaTiles[i]["HeightMap"][x],Color.black,1.1);
					draw_line(offset+Vector2(x,8),offset+Vector2(x,8-metaTiles[i]["HeightMap"][x]),Color.BLACK,1.1);
				offset.x += 9;
			offset = Vector2(0,0);
			for i in range(tileMap.size()):
				var id = tileMap[i][0];
				for x in range(metaTiles[tile[id]["TileData"][0]]["HeightMap"].size()):
					var flip = tile[id]["Dir"][0];
					draw_line(offset+Vector2(x+0.5,8-flip[1]*8),
					offset+Vector2(x+0.5,8-flip[1]*8-(metaTiles[tile[id]["TileData"][0]]["HeightMap"][x])*(1+flip[1]*-2)),
					Color(0.55,0,0,0.9),1.1);
					
					flip = tile[id]["Dir"][1];
					draw_line(offset+Vector2(x+0.5+8,8-(flip[1]*8)),
					offset+Vector2(x+0.5+8,8-flip[1]*8-(metaTiles[tile[id]["TileData"][1]]["HeightMap"][x])*(1+flip[1]*-2)),
					Color(0,0.55,0,0.9),1.1);

					flip = tile[id]["Dir"][2];
					draw_line(offset+Vector2(x+0.5,8+8-(flip[1]*8)),
					offset+Vector2(x+0.5,8+8-flip[1]*8-(metaTiles[tile[id]["TileData"][2]]["HeightMap"][x])*(1+flip[1]*-2)),
					Color(0,0,0.55,0.9),1.1);

					flip = tile[id]["Dir"][3];
					draw_line(offset+Vector2(x+0.5+8,8+8-(flip[1]*8)),
					offset+Vector2(x+0.5+8,8+8-flip[1]*8-(metaTiles[tile[id]["TileData"][3]]["HeightMap"][x])*(1+flip[1]*-2)),
					Color(0.55,0.55,0,0.9),1.1);
				#pointerDir
				draw_line(offset+Vector2(8,8),offset+Vector2(8,8)+(Vector2.UP*4).rotated((tile[tileMap[i][0]]["Angle"])),Color.LIGHT_CORAL,2);
				draw_line(offset+Vector2(8,8)-(Vector2.RIGHT*2).rotated((tile[tileMap[i][0]]["Angle"])),
				offset+Vector2(8,8)+(Vector2.RIGHT*2).rotated((tile[tileMap[i][0]]["Angle"])),Color.LIGHT_BLUE,2);
				#draw_set_transform(Vector2.ZERO,deg2rad(tile[id]["Angle"]),Vector2(1,1));
				#draw_texture(pointerDir,offset+Vector2(4,4));
				#draw_set_transform(Vector2.ZERO,deg2rad(-tile[id]["Angle"]),Vector2(1,1));
				
				offset += Vector2(16,0);
				if (offset.x >= texture.get_width()):
					offset = Vector2(0,offset.y+16);

#var metaTiles = [
#	# 0 = empty
#	{"Angle": 0, "HeightMap": [0,0,0,0,0,0,0,0]},
#	# 1 = filled
#	{"Angle": 0, "HeightMap": [8,8,8,8,8,8,8,8]},
#];
#var tile = [
#	# 0 empty tile
##	{
##		"TileData": [0,0,0,0],
##		"Dir": [[0,0],[0,0],[0,0],[0,0]]
##		"AnglePriority": [null,null,null,null]
##	},
#];
#
#var tileMap = [
##	[[0,0,0],[0,0,0]]
#]
